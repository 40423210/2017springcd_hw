<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2017Spring 協同產品設計實習 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/course.atom.xml" rel="self"></link><id>./</id><updated>2017-06-14T11:00:00+08:00</updated><entry><title>2017/06/14 W17</title><link href="./2017spring-cd-W17.html" rel="alternate"></link><published>2017-06-14T11:00:00+08:00</published><updated>2017-06-14T11:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-06-14:./2017spring-cd-W17.html</id><summary type="html"></summary><category term="Notes  w17"></category></entry><entry><title>2017/06/07 W16</title><link href="./2017spring-cd-W16.html" rel="alternate"></link><published>2017-06-07T11:00:00+08:00</published><updated>2017-06-07T11:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-06-07:./2017spring-cd-W16.html</id><summary type="html">&lt;h3&gt;V-rep 模擬齒輪傳動&lt;/h3&gt;



&lt;p&gt;不管是將以中間齒輪為動力或是左右兩邊的齒輪為動力，從動齒輪都會有跳動的情況。&lt;/p&gt;

&lt;p&gt;以中間齒輪為動力:&lt;iframe src="https://player.vimeo.com/video/222353675" width="640" height="346" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/222353675"&gt;2017-6-18_V-rep 齒輪模擬 (以中間齒輪為動力)&lt;/a&gt; from &lt;a href="https://vimeo.com/user63868127"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;以左右齒輪為動力: &lt;iframe src="https://player.vimeo.com/video/222354505" width="640" height="346" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/222354505"&gt;2017-6-18_V-rep 齒輪模擬 (以左右齒輪為動力)&lt;/a&gt; from &lt;a href="https://vimeo.com/user63868127"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;發現問題出在模擬器，內建齒輪範例的模擬器為 Vortex，而我們使用免費版的模擬器為 Bullet。&lt;/p&gt;

&lt;p&gt;若使用免費版模擬，只能靠約束主動軸和從動軸的關係來進行動態模擬，而無法像付費版是利用齒輪的外型，進行的相對運動模擬。&lt;/p&gt;</summary><category term="Notes  w16"></category></entry><entry><title>2017/05/31 W15</title><link href="./2017spring-cd-W15.html" rel="alternate"></link><published>2017-05-31T11:00:00+08:00</published><updated>2017-05-31T11:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-05-31:./2017spring-cd-W15.html</id><summary type="html">&lt;p&gt;組員協同練習&lt;/p&gt;



&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")

ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "35px ScriptS"
ctx.fillText("40423210 ",440,350)
ctx.stroke()
&lt;/script&gt;</summary><category term="Notes  w15"></category></entry><entry><title>2017/05/24 W14</title><link href="./2017spring-cd-W14.html" rel="alternate"></link><published>2017-05-24T16:00:00+08:00</published><updated>2017-05-24T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-05-24:./2017spring-cd-W14.html</id><summary type="html">&lt;p&gt;架設主機&lt;/p&gt;</summary><category term="Notes  w14"></category></entry><entry><title>2017/05/17 W13</title><link href="./2017spring-cd-W13.html" rel="alternate"></link><published>2017-05-17T16:00:00+08:00</published><updated>2017-05-17T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-05-17:./2017spring-cd-W13.html</id><summary type="html">&lt;h2&gt;八連桿行走機構&lt;/h2&gt;


&lt;iframe src="https://player.vimeo.com/video/222323602" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/222323602"&gt;2017-06-16_模擬 Eightbar 行走機構&lt;/a&gt; from &lt;a href="https://vimeo.com/user63868127"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="Notes  w13"></category></entry><entry><title>2017/05/10 W12</title><link href="./2017spring-cd-W12.html" rel="alternate"></link><published>2017-05-10T16:00:00+08:00</published><updated>2017-05-10T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-05-10:./2017spring-cd-W12.html</id><summary type="html">&lt;h3&gt;FeatureScript 正齒輪&lt;/h3&gt;



&lt;p&gt;以下為對應的 FeatureScript 正齒輪輪廓繪圖程式碼:&lt;/p&gt;

&lt;pre class="brush: python"&gt;
FeatureScript 581;
import(path : "onshape/std/geometry.fs", version : "581.0");&lt;p&gt;&lt;/p&gt;
&lt;p&gt;annotation { "Feature Type Name" : "Spur2" }
export const spur = defineFeature(function(context is Context, id is Id, definition is map)
    precondition
    {
        // 正齒輪齒數, 由使用者輸入, 型別為整數
        annotation { "Name" : "Number of Gear Tooth" }
        isInteger(definition.n, POSITIVE_COUNT_BOUNDS);
        // 正齒輪模數, 由使用者輸入, 型別為長度, 為內建尺寸單位
        annotation { "Name" : "Module" }
        isLength(definition.module, LENGTH_BOUNDS);
        // 正齒輪壓力角, 由使用者輸入, 型別為角度, 為內建角度單位
        annotation { "Name" : "Pressure Angle" }
        isAngle(definition.pa, ANGLE_360_BOUNDS);
        // 正齒輪圓心座標點, 由使用者選擇
        annotation { "Name" : "Select a point", "Filter" : EntityType.VERTEX, "MaxNumberOfPicks" : 1 }
        definition.point is Query;
    }
    {
        // Precondition 中的查詢, 需要 evalue 才能傳回對應的 entity
        var location = evaluateQuery(context, definition.point)[0];
        // location 變數為點座標對應的 entity, 必須透過 evVetexPoint 的評量才能傳回對應的點座標
        var center3D = evVertexPoint(context, {
                "vertex" : location
        });&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;    // 作圖平面利用 evOwnerSketch 評量, 與 location entity 同一個平面
    var sketchPlane = evOwnerSketchPlane(context, {
            "entity" : location
    });
    // 作圖畫
    const gearSketch = newSketchOnPlane(context, id + "gearSketch", {
            "sketchPlane" : sketchPlane
    });
    // 利用 worldToPlane, 將 center3D 轉換為 sketchPlane 上的平面點座標
    const center2D = worldToPlane(sketchPlane, center3D);
    //print(center2D);
    // 漸開線近似點數
    var imax = 5;
    // 使用者所選的齒輪圓心 x 座標
    var midx = center2D[0];
    // 使用者所選的齒輪圓心 y 座標
    var midy = center2D[1];
    // 齒數
    var n = definition.n;
    // 模數
    var m = definition.module;
    // 壓力角, 單位為角度
    var pa = definition.pa;
    // 齒輪的節圓半徑
    var rp = m*n/2;
    skLineSegment(gearSketch, "line", {
    "start" : vector(midx,midy),
    "end" : vector(midx,midy+rp)
    });
    // 齒根
    var d = 2.5*rp/n;
    // 齒頂圓半徑
    var ra = rp + m;
    // 基圓半徑
    var rb = rp*cos(pa);
    //print(rb);
    // 齒根圓半徑
    var rd = rp - d;
    // 分段後齒頂與齒根半徑差增量
    var dr = 0*meter;
    // 若 rb &gt; rd 時從基圓開始繪製漸開線, 但是若 rd &gt; rb, 則漸開線從 rd 畫到齒頂圓
    if (rd &gt; rb)
    {
        // 半徑差的分段, 由齒根圓到齒頂圓
        dr = (ra-rd)/imax;
    }
    else
    {
        // 半徑差的分段, 由基圓到齒頂圓
        dr = (ra-rb)/imax;
    }
    // PI 為實數值沒有單位, tan(pa)也沒有單位, pa 已經設定單位為 degree, 這裡為了與 radian 運算
    // 系統會自動轉為 radian
    var rot = PI/(2*n)*radian;
    //print(sigma);
    // 分別用來設定 entity id 用的增量變數
    var nameId = 1;
    var nameId2 = 1;
    var r = 0*meter;
    // theta 為浮點數字
    var theta = 0;
    var inv = 0*radian;
    var inc = 0*radian;
    // 當 r=rp 時 ,計算 inv_rp 用來旋轉漸開線用
    // theta 為沒有單位的實數
    theta = sqrt((rp*rp)/(rb*rb)-1);
    // atan(theta) 為 radian
    var inv_rp = theta*radian-atan(theta);
    // 漸開線上點的 x 座標
    var xpt = 0*meter;
    // 漸開線上點的 y 座標
    var ypt = 0*meter;
    // 左側漸開線第1點座標 left first x and y
    var lfx = 0*meter;
    var lfy = 0*meter;
    // 右側漸開線第1點座標 right first x and y
    var rfx = 0*meter;
    var rfy = 0*meter;
    // 左側齒根圓上點座標 left x of dedendum point
    var lxd = 0*meter;
    var lyd = 0*meter;
    // 右側齒根圓上點座標 right x of dedendum point
    var rxd = 0*meter;
    var ryd = 0*meter;
    // 左側齒根圓上點座標 right x of dedendum point (advanced)
    var lxd_ad = 0*meter;
    var lyd_ad = 0*meter;
    var inc_ad = 0*radian;
    for (var j=0;j&lt;n;j+=1)
    {
        // 當 j 增量時, 按照齒數輪廓繞行旋轉增量角度
        inc = (2.*j*PI/n)*radian;
        inc_ad = (2.*(j+1)*PI/n)*radian;
        if (rd&gt;rb)
        {
            // 當齒根半徑因為齒數增多後大於基圓半徑時, 漸開線從齒根圓長起
            theta = sqrt((rd*rd)/(rb*rb)-1.);
            inv = theta*radian-atan(theta);
            // 左側漸開線第1點座標
            // 左側輪廓線配合逆時針旋轉 inc 角度
            lfx = midx+rd*sin(inv-rot-inv_rp+inc);
            lfy = midy+rd*cos(inv-rot-inv_rp+inc);
            lxd = lfx;
            lyd = lfy;
            lxd_ad = midx+rd*sin(inv-rot-inv_rp+inc_ad);
            lyd_ad = midy+rd*cos(inv-rot-inv_rp+inc_ad);
            // 右側漸開線第1點座標
            // 右側輪廓線配合順時針旋轉 inc 角度
            rfx = midx-rd*sin(inv-rot-inv_rp-inc);
            rfy = midy+rd*cos(inv-rot-inv_rp-inc);
            rxd = rfx;
            ryd = rfy;
            // 齒根圓上的直線 on dedendum points
            skLineSegment(gearSketch, "line_dd" ~ nameId, {
            "start" : vector(rxd,ryd),
            "end" : vector((lxd_ad),(lyd_ad))
            });
        }
        else
        {
            // 當基圓半徑大於齒根圓時, 漸開線從基圓長起
            theta = sqrt((rb*rb)/(rb*rb)-1.);
            inv = theta*radian-atan(theta);
            // 左側漸開線第1點座標
            lfx = midx+rb*sin(inv-rot-inv_rp+inc);
            lfy = midy+rb*cos(inv-rot-inv_rp+inc);
            lxd = midx+rd*sin(inv-rot-inv_rp+inc);
            lyd = midy+rd*cos(inv-rot-inv_rp+inc);
            lxd_ad = midx+rd*sin(inv-rot-inv_rp+inc_ad);
            lyd_ad = midy+rd*cos(inv-rot-inv_rp+inc_ad);
            // 從基圓點到齒根圓點, 畫直線 left from base point to dedendum point
            skLineSegment(gearSketch, "line_lbd" ~ nameId, {
            "start" : vector(lfx,lfy),
            "end" : vector((lxd),(lyd))
            });
            // 右側漸開線第1點座標
            rfx = midx-rb*sin(inv-rot-inv_rp-inc);
            rfy = midy+rb*cos(inv-rot-inv_rp-inc);
            rxd = midx-rd*sin(inv-rot-inv_rp-inc);
            ryd = midy+rd*cos(inv-rot-inv_rp-inc);
            // 從基圓點到齒根圓點, 畫直線 right from base point to dedendum point
            skLineSegment(gearSketch, "line_rbd" ~ nameId, {
            "start" : vector(rfx,rfy),
            "end" : vector((rxd),(ryd))
            });
            // 齒根圓上的直線 on dedendum points
            skLineSegment(gearSketch, "line_dd" ~ nameId, {
            "start" : vector(rxd,ryd),
            "end" : vector((lxd_ad),(lyd_ad))
            });
        }

        for (var i=1; i&lt;imax+1; i+= 1)
        {
            // 先處理中線左側的漸開線
            // 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
            if (rd&gt;rb)
            {
                r = rd+i*dr;
            }
            else
            {
                r = rb+i*dr;
            }
            theta = sqrt((r*r)/(rb*rb)-1);
            var inv = theta*radian-atan(theta);
            // 漸開線上的點座標
            xpt = midx+r*sin(inv-rot-inv_rp+inc);
            ypt = midy+r*cos(inv-rot-inv_rp+inc);
            // lxd, lyd 為漸開線上的繪線起點座標
            skLineSegment(gearSketch, "lineb" ~ nameId, {
            "start" : vector(lfx,lfy),
            "end" : vector((xpt),(ypt))
            });
            // 更新漸開線點座標
            lfx = xpt;
            lfy = ypt;
            nameId += 1;
        }
        // 紀錄左側漸開線的最後一點, 也就是齒頂圓上的點座標
        var lastlx = xpt;
        var lastly = ypt;
        // another side
        for (var i=1; i&lt;imax+1; i+= 1)
        {
            if (rd&gt;rb)
            {
                r = rd+i*dr;
            }
            else
            {
                r = rb+i*dr;
            }
            theta = sqrt((r*r)/(rb*rb)-1);
            var inv = theta*radian-atan(theta);
            // 漸開線上的點座標
            xpt = midx-r*sin(inv-rot-inv_rp-inc);
            ypt = midy+r*cos(inv-rot-inv_rp-inc);
            // rxd, ryd 為漸開線上的繪線起點座標
            skLineSegment(gearSketch, "linec" ~ nameId, {
            "start" : vector(rfx,rfy),
            "end" : vector((xpt),(ypt))
            });
            // 更新漸開線點座標
            rfx = xpt;
            rfy = ypt;
            nameId += 1;
        }
        var lastrx = xpt;
        var lastry = ypt;
        // 齒頂連線
        skLineSegment(gearSketch, "lined" ~ nameId2, {
        "start" : vector(lastlx,lastly),
        "end" : vector(lastrx,lastry)
        });
        nameId2 += 1;
    }
skSolve(gearSketch);
});
&lt;/pre&gt;&lt;/div&gt;
&lt;/pre&gt;</summary><category term="Notes  w12"></category></entry><entry><title>2017/05/03 W11</title><link href="./2017spring-cd-W11.html" rel="alternate"></link><published>2017-05-03T16:00:00+08:00</published><updated>2017-05-03T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-05-03:./2017spring-cd-W11.html</id><summary type="html">&lt;h3&gt;以 Brython 繪製單一正齒輪廓&lt;/h3&gt;



&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 53
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")
&lt;/script&gt;

&lt;h3&gt;導入 Cango 程式庫繪製正齒輪廓&lt;/h3&gt;

&lt;!-- 以下處理 Cango Spur Gear --&gt;

&lt;!-- Cango 程式庫 --&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
_old/Cango-8v03.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
_old/Cango2D-7v01-min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
_old/CangoAxes-1v33.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
_old/CangoAnimation-4v01.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
_old/gearUtils-05.js"&gt;&lt;/script&gt;

&lt;canvas id='cango_gear' width='800' height='750'&gt;&lt;/canvas&gt;

&lt;script type="text/python"&gt;
# 將 導入的 document 設為 doc 主要原因在於與舊程式碼相容
from browser import document as doc
# 由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換
from browser import window
import math

# 主要用來取得畫布大小
canvas = doc["cango_gear"]
# 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx
#ctx = canvas.getContext("2d")
cango = window.Cango.new
# 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換
shapedefs = window.shapeDefs
# 目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形
# in CangoAnimation.js
#interpolate1 = window.interpolate
# Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件
cobj = window.Cobj.new
creategeartooth = window.createGearTooth.new
# 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id="cango_gear" 的 canvas 上
cgo = cango("cango_gear")

######################################
# 畫正齒輪輪廓
#####################################
# n 為齒數
n = 17
# pa 為壓力角
pa = 25
# m 為模數, 根據畫布的寬度, 計算適合的模數大小
# Module = mm of pitch diameter per tooth
m = 0.8*canvas.width/n
# pr 為節圓半徑
pr = n*m/2 # gear Pitch radius
# generate gear
data = creategeartooth(m, n, pa)
# Brython 程式中的 print 會將資料印在 Browser 的 console 區
#print(data)
gearTooth = cobj(data, "SHAPE", {
        "fillColor":"#ddd0dd",
        "border": True,
        "strokeColor": "#606060" })
gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh
# 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中
gear = gearTooth.dup()
# gear 為單一齒的輪廓資料
#cgo.render(gearTooth)

# 利用單齒輪廓旋轉, 產生整個正齒輪外形
for i in range(1, n):
    # 將 gearTooth 中的資料複製到 newTooth
    newTooth = gearTooth.dup()
    # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear
    newTooth.rotate(360*i/n)
    # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號
    gear.appendPath(newTooth, True) # trim move command = True

# 建立軸孔
# add axle hole, hr 為 hole radius
hr = 0.6*pr # diameter of gear shaft
shaft = cobj(shapedefs.circle(hr), "PATH")
shaft.revWinding()
gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path
cx = canvas.width/2
cy = canvas.height/2
gear.translate(cx, cy)
# render 繪出靜態正齒輪輪廓
cgo.render(gear)
&lt;/script&gt;</summary><category term="Notes  w11"></category></entry><entry><title>2017/04/26 W10</title><link href="./2017spring-cd-W10.html" rel="alternate"></link><published>2017-04-26T16:00:00+08:00</published><updated>2017-04-26T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-04-26:./2017spring-cd-W10.html</id><summary type="html">&lt;h2&gt;Fourbar Walker OnShape 零件協同繪圖與組立查驗&lt;/h2&gt;


&lt;p&gt;四連桿四足行走機構
&lt;iframe src="https://player.vimeo.com/video/214869893" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/214869893"&gt;2017-04-26_四連桿四足行走機構(動畫)&lt;/a&gt; from &lt;a href="https://vimeo.com/user63868127"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="Notes  w10"></category></entry><entry><title>2017/04/19 W9</title><link href="./2017spring-cd-W9.html" rel="alternate"></link><published>2017-04-19T16:00:00+08:00</published><updated>2017-04-19T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-04-19:./2017spring-cd-W9.html</id><summary type="html">&lt;h2&gt;期中考試&lt;/h2&gt;
&lt;h3&gt;四連桿機構協同 Trace Point 查驗&lt;/h3&gt;

&lt;pre class="brush: python"&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
brython(1);
}
&lt;/script&gt;

 &lt;!-- 以下實際利用  Brython 畫四連桿 trace point 路徑--&gt;
 &lt;canvas id="fourbar_40423226" width="600" height="400"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
from browser import html
import math
# 準備繪圖畫布
canvas = doc["fourbar_40423226"]
ctx = canvas.getContext("2d")

fourbar_data = open("./../data/midterm5.csv").read()
fourbar_list = fourbar_data.splitlines()
# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 利用 transform 將 y 座標反轉, 且 offset canvas.height
# (X scale, X skew, Y skew, Y scale, X offset, Y offset)
# 配合圖形位置進行座標轉換
ctx.transform(1, 0, 0, -1, canvas.width/2+250, canvas.height/2+100)
# 畫出 x 與 y 座標線
# 各座標值放大 3 倍
ratio = 3
ctx.moveTo(0, 0)
ctx.lineTo(-30*ratio, 0)
start_point = fourbar_list[0].split(",")
ctx.moveTo(float(start_point[0])*ratio, float(start_point[1])*ratio)
count = 0
for data in fourbar_list[1:]:
    point = data.split(",")
    #count = count + 1
    #container1 &lt;= str(count) + ":" + point[0] + "," + point[1]
    #container1 &lt;= html.BR()
    ctx.lineTo(float(point[0])*ratio, float(point[1])*ratio)
# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&lt;/script&gt;
&lt;/pre&gt;

&lt;h3&gt;練習影片&lt;/h3&gt;

&lt;iframe src="https://player.vimeo.com/video/214882708" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/214882708"&gt;midtern2&lt;/a&gt; from &lt;a href="https://vimeo.com/user61434176"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;h3&gt;Fourbar Walker OnShape 零件協同繪圖與組立&lt;/h3&gt;

&lt;iframe src="https://player.vimeo.com/video/214771995" width="640" height="317" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/214771995"&gt;Fourbar Walker OnShape &lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;心得&lt;/p&gt;

&lt;p&gt;這週的上課內容是老師要求在每一part的時間內完成指定任務，而我們這組在分工上面是有點不平均的，像是畫圖的部分，必須會畫的要教不會畫的，這會花蠻多時間的，所以平時要多多練習，每一週交代的功課要盡快跟上，才不會有這種情形發生，這學期也過一半了，也學到蠻多東西的，協同這門課是需要同心協力，如果學好後，去業界才有競爭力。&lt;/p&gt;</summary><category term="Notes  w9"></category></entry><entry><title>2017/04/12 W8</title><link href="./2017spring-cd-W8.html" rel="alternate"></link><published>2017-04-12T16:00:00+08:00</published><updated>2017-04-12T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-04-12:./2017spring-cd-W8.html</id><summary type="html">&lt;h2&gt;期中自評成績&lt;/h2&gt;
&lt;p&gt;個人自評:&lt;a href="http://mde1a2.kmol.info:8000/k96tgzh1ofbl"&gt;http://mde1a2.kmol.info:8000/k96tgzh1ofbl&lt;/a&gt; &lt;/p&gt;

&lt;p&gt;小組互評: &lt;a href="https://pygroup-ag100.rhcloud.com"&gt;https://pygroup-ag100.rhcloud.com&lt;/a&gt; &lt;/p&gt;</summary><category term="Notes  w8"></category></entry><entry><title>2017/04/05 W7</title><link href="./2017spring-cd-W7.html" rel="alternate"></link><published>2017-04-05T16:00:00+08:00</published><updated>2017-04-05T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-04-05:./2017spring-cd-W7.html</id><summary type="html">&lt;h2&gt;Fossil 推送&lt;/h2&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/214789504" width="640" height="341" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/214789504"&gt;Fossil 推送&lt;/a&gt; from &lt;a href="https://vimeo.com/user60140629"&gt;40423246&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;組立八連桿機構(solvespace)&lt;/h2&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/213023653" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/213023653"&gt;组立八連桿機構&lt;/a&gt; from &lt;a href="https://vimeo.com/user61434176"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;將八連桿匯入v-rep並加入馬達&lt;/h2&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/213030727" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/213030727"&gt;八連桿機構轉入v-rep加馬達&lt;/a&gt; from &lt;a href="https://vimeo.com/user61434176"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;心得:這次的作業花費的時間相當久，尤其是畫八連桿的時候，出錯了好幾次，終於發現問題點在哪裡了，非常有成就感。&lt;/p&gt;</summary><category term="Notes  w7"></category></entry><entry><title>2017/03/29 W6</title><link href="./2017spring-cd-W6.html" rel="alternate"></link><published>2017-03-29T16:00:00+08:00</published><updated>2017-03-29T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-03-29:./2017spring-cd-W6.html</id><summary type="html">&lt;h3&gt;多連桿運動模擬在v-rep&lt;/h3&gt;

&lt;iframe src="https://player.vimeo.com/video/211155142" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/211155142"&gt;四連桿轉入v-rep&lt;/a&gt; from &lt;a href="https://vimeo.com/user61434176"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;心得:這次自己試著模擬多連桿，感覺蠻有成就感的，因為老師是模擬單連桿，又學會新的東西。&lt;/p&gt;</summary><category term="Notes  w6"></category></entry><entry><title>2017/03/22 W5</title><link href="./2017spring-cd-W5.html" rel="alternate"></link><published>2017-03-22T16:00:00+08:00</published><updated>2017-03-22T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-03-22:./2017spring-cd-W5.html</id><summary type="html">&lt;h2&gt;將單連桿轉入v-rep進行運動模擬&lt;/h2&gt;
&lt;p&gt;&lt;iframe src="https://player.vimeo.com/video/210535267" width="640" height="454" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/210535267"&gt;solvespace匯入v-rep加馬達&lt;/a&gt; from &lt;a href="https://vimeo.com/user61434176"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;心得:一開始以為加顆馬達非常簡單，結果步驟卻是一大堆，可是重複做就會變得蠻熟悉的。&lt;/p&gt;</summary><category term="Notes  w5"></category></entry><entry><title>2017/03/15 W4</title><link href="./2017spring-cd-W4.html" rel="alternate"></link><published>2017-03-15T16:00:00+08:00</published><updated>2017-03-15T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-03-15:./2017spring-cd-W4.html</id><summary type="html">&lt;h2&gt;Fossil SCM倉儲&lt;/h2&gt;
&lt;p&gt;&lt;p&gt;每組要在https://mde2a2.kmol.info 主機上建倉儲:&lt;a href="https://mde2a2.kmol.info/cdbg5"&gt;https://mde2a2.kmol.info/cdbg5&lt;/a&gt;&lt;/p&gt;&lt;/p&gt;
&lt;h2&gt;單連桿機構&lt;/h2&gt;
&lt;p&gt;&lt;p&gt;用solvespace繪製&lt;/p&gt;
&lt;button onClick="lity('https://vimeo.com/209043749')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 單連桿&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;用onshape繪製&lt;/p&gt;

&lt;p&gt;&lt;button onClick="lity('https://vimeo.com/209062161')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 單連桿&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;用solvespace轉入v-rep&lt;/p&gt;

&lt;p&gt;&lt;button onClick="lity('https://vimeo.com/211058729')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 單連桿轉v-rep&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;用onshape轉入v-rep&lt;/p&gt;

&lt;p&gt;&lt;button onClick="lity('https://vimeo.com/211076919')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 單連桿轉v-rep&lt;/button&gt;&lt;/p&gt;
&lt;h2&gt;四連桿機構&lt;/h2&gt;
&lt;p&gt;&lt;p&gt;用onshape繪製&lt;/p&gt;
&lt;button onClick="lity('https://vimeo.com/208996140')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 四連桿&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;用onshape轉入v-rep&lt;/p&gt;

&lt;p&gt;&lt;button onClick="lity('https://vimeo.com/209421758')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; 四連桿轉v-rep&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;心得:這禮拜要建立好各組的倉儲，每位組員要分工合作，也期許我的partner能一起加油。&lt;/p&gt;</summary><category term="Notes  w4"></category></entry><entry><title>2017/03/08 W3</title><link href="./2017spring-cd-W3.html" rel="alternate"></link><published>2017-03-08T16:00:00+08:00</published><updated>2017-03-08T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-03-08:./2017spring-cd-W3.html</id><summary type="html">&lt;h3&gt;HyperWorks 14.0 Student Edition&lt;/h3&gt;

&lt;p&gt;Student Edition: &lt;a href="http://www.altairuniversity.com/get-the-free-hyperworks-14-0-student-edition/"&gt;Download Now!&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;近端 Fossil&lt;/h3&gt;

&lt;p&gt;1. 更改 Start.bat 設定&lt;/p&gt;

&lt;pre class="brush: python"&gt;
REM tiny2017 主要針對初學 Python3 與 C 學員所建立
REM 近端使用 fossil 管理資料版本, 並且定時轉為 git 格式後上傳到 github
@echo off
REM 設定 y 硬碟代號與 data 目錄對應
set Disk=y
subst %Disk%: "data"
REM 設定 leo 相關對應 Home 位置
set HomePath=%Disk%:\home
set HomeDrive=%Disk%:\home
set Home=%Disk%:\home
REM 將系統 Python 程式的 io 設為 utf-8
set PYTHONIOENCODING="utf-8"
REM 將後續的指令執行, 以 %Disk% 為主
%Disk%:
REM 設定 PYTHONPATH
set PYTHONPATH=%Disk%:\python-3.5.3-embed-amd64
REM 設定 Leo 所用的編輯器
set LEO_EDITOR=%Disk%:\wscite\SciTE.exe
REM for fossil https 連線設定
set HTTPS=on
REM 指令搜尋路徑設定
set path1=%PATH%;%Disk%:;%Disk%:\python-3.5.3-embed-amd64;%Disk%:\git\bin;%Disk%:\stunnel\bin;%Disk%:\sqlite-tools;%Disk%:\python-3.5.3-embed-amd64\Scripts;%Disk%:\portablegit\bin;
set path2=c:\Windows\Microsoft.NET\Framework\v3.5;%Disk%:\python-3.5.3-embed-amd64\Lib\site-packages;
path=%path%;%path1%;%path2%
start /MIN %Disk%:\wscite\SciTE.exe
start /MIN cmd.exe
start /MIN cmd.exe
start /MIN cmd.exe
REM 啟動 Leo 編輯器
REM %Disk%:\Miniconda3\python.exe %Disk%:\apps\launchLeo.py
REM 啟動 stunnel
start /MIN fossil.exe server -P 127.0.0.1:8080 %Disk%:\tmp\fossil_repo\2017springcd_hw.fpssil
REM 取得電腦 IP, 然後設定 %Disk%:/stunnel/config/stunnel.conf
for /f "delims=[] tokens=2" %%a in ('ping -4 -n 1 %ComputerName% ^| findstr [') do set NetworkIP=%%a
REM echo Network IP: %NetworkIP%
REM Saved in %Disk%:\stunnel\config\stunnel.conf
@echo off
REM 建立 stunnel.conf
@echo [https] &gt; %Disk%:\stunnel\config\stunnel.conf
REM 附加資料
@echo accept = %NetworkIP%:443 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo connect = 127.0.0.1:8080 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo TIMEOUTclose = 0 &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo cert = %Disk%:\stunnel\config\localhost.crt &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
@echo key = %Disk%:\stunnel\config\localhost.key &gt;&gt; %Disk%:\stunnel\config\stunnel.conf
REM 啟動 stunnel
start /MIN stunnel.exe
Exit
&lt;/pre&gt;

&lt;p&gt;2. 在tmp裏的 fossil_repo 目錄執行指令&lt;/p&gt;

&lt;pre&gt;fossil init 2017springcd_hw.fpssil&lt;/pre&gt;

&lt;p&gt;3. 查詢 IP&lt;/p&gt;

&lt;pre&gt;ipconfig /all&lt;/pre&gt;

&lt;p&gt;4. 確認是否有用 Proxy , 若有則需要將自己的IP設為例外&lt;/p&gt;

&lt;p&gt;5. 使用瀏覽器輸入網址&lt;/p&gt;

&lt;pre&gt;https://&lt;u&gt;電腦IPv4的IP&lt;/u&gt;&lt;/pre&gt;

&lt;h2&gt;繪製四連桿機構&lt;/h2&gt;
&lt;p&gt;solvespace&lt;/p&gt;

&lt;p&gt;&lt;button onClick="lity('https://vimeo.com/207891452')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; Link30&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/208419586')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; Link50&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/208420761')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; Link60&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/208423680')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; fourbar&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;onshape&lt;/p&gt;

&lt;p&gt;&lt;button onClick="lity('https://vimeo.com/208983301')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; Link30&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/208984035')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; Link50&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/208986198')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt; Link60&lt;/button&gt;
&lt;button onClick="lity('https://vimeo.com/208996140')"&gt;&lt;span class="glyphicon glyphicon-facetime-video"&gt;&lt;/span&gt;fourbar&lt;/button&gt;&lt;/p&gt;
&lt;p&gt;心得:這禮拜是畫四連桿零件及組立，花了不少時間作圖及錄影，也學會不少東西。&lt;/p&gt;</summary><category term="Notes  w3"></category></entry><entry><title>2017/03/01 W2</title><link href="./2017spring-cd-W2.html" rel="alternate"></link><published>2017-03-01T16:00:00+08:00</published><updated>2017-03-01T16:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-03-01:./2017spring-cd-W2.html</id><summary type="html">&lt;h2&gt;分組座位程式碼&lt;/h2&gt;
&lt;pre class="brush: python"&gt;

&lt;h1&gt;import os&lt;/h1&gt;
&lt;p&gt;adata = open("w2b_cadlab.txt", encoding="utf-8").read()&lt;/p&gt;
&lt;h1&gt;讀取w2b_cadlab.txt 檔案,讓裡面的內容成為資料, 因為檔案裡有中文, 所以設定encoding 使用utf-8 的編驛碼&lt;/h1&gt;
&lt;p&gt;rdata = open("w2b_registered.txt", encoding="utf-8").read().splitlines()&lt;/p&gt;
&lt;h1&gt;print(adata)&lt;/h1&gt;
&lt;h1&gt;用print 先檢查資料是否是我們需要的&lt;/h1&gt;
&lt;p&gt;alist = adata.splitlines()&lt;/p&gt;
&lt;h1&gt;利用splitlines 的方法把資料隔開, 就可以得到一個特定的數列&lt;/h1&gt;
&lt;h1&gt;print(alist[2])&lt;/h1&gt;
&lt;p&gt;n = 0
row = 0
final_list = []
w2_list = []
for stud_num in alist[2:]:&lt;/p&gt;
&lt;h1&gt;從第2列開始, 因為第0列和第1列都不是我們要的&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;row = row + 1
blist = stud_num.split(&amp;quot;\t&amp;quot;)
#print(blist)
column = 0
#為了避免序號連續, 利用column = 0 將順序重製, 因為每一列算完之後要換下一列重新開始
for i in range(len(blist)):
    column = column + 1
    if blist[i] != &amp;quot;&amp;quot;:
        #print(blist[i])
        clist = blist[i].split(&amp;quot;_&amp;quot;)
        stud_data = clist[0]+&amp;quot;_&amp;quot;+clist[1]+&amp;quot;_&amp;quot;+str(row)+&amp;quot;_&amp;quot;+str(column)
        final_list.append(stud_data)
        w2_list.append(clist[1])
        n = n +1
&lt;/pre&gt;&lt;/div&gt;


&lt;h1&gt;根據數列前導字串排序, 目的在建立分組數列&lt;/h1&gt;
&lt;p&gt;group_list = sorted(final_list)
print("分組名單:")
for i in range(len(group_list)):
    print(group_list[i])
print("座位列表:")
for i in range(len(final_list)):
    print(final_list[i])
for i in range(len(rdata)):
    if rdata[i] not in w2_list:
        print("缺席學生:", rdata[i])
print("學生總數:", n)&lt;/p&gt;
&lt;h1&gt;print(os.environ)&lt;/h1&gt;
&lt;/pre&gt;

&lt;p&gt;用solvespace畫出四連桿機構，再觀察運動方式&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/211043203" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/211043203"&gt;觀察四連桿運動方式&lt;/a&gt; from &lt;a href="https://vimeo.com/user61434176"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;心得:這週的作業是用solvespace畫出四連桿機構，覺得蠻有趣的，過程中畫錯不少次，但是總會有成功的一天。&lt;/p&gt;</summary><category term="Notes  w2"></category></entry><entry><title>2017/02/22 W1</title><link href="./2017spring-cd-W1.html" rel="alternate"></link><published>2017-02-22T15:00:00+08:00</published><updated>2017-02-22T15:00:00+08:00</updated><author><name>40423210</name></author><id>tag:,2017-02-22:./2017spring-cd-W1.html</id><summary type="html">&lt;h2&gt;更改 stunnel.conf 的 IP 設定&lt;/h2&gt;
&lt;iframe src="https://player.vimeo.com/video/207314525" width="640" height="359" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/207314525"&gt;2017-03-08作業&lt;/a&gt; from &lt;a href="https://vimeo.com/user61434176"&gt;40423210&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;心得:這學期的作業會越來越繁重，之後的進度要跟上，這禮拜的作業是修改stuunel的IP設定，算是ok的&lt;/p&gt;</summary><category term="Notes  w1"></category></entry></feed>